[{"/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/reportWebVitals.js":"1","/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/index.js":"2","/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/App.js":"3","/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/components/ValueView.js":"4","/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/components/ButtonContainer.js":"5","/Users/c0rt3x/Documents/BooGeek/React Simple/Calculator/src/App.js":"6","/Users/c0rt3x/Documents/BooGeek/React Simple/Calculator/src/components/ValueView.js":"7","/Users/c0rt3x/Documents/BooGeek/React Simple/Calculator/src/components/ButtonContainer.js":"8"},{"size":362,"mtime":1606597062052,"results":"9","hashOfConfig":"10"},{"size":500,"mtime":1606597062051,"results":"11","hashOfConfig":"10"},{"size":1130,"mtime":1607778398618,"results":"12","hashOfConfig":"10"},{"size":254,"mtime":1607773192238,"results":"13","hashOfConfig":"10"},{"size":3704,"mtime":1607780690572,"results":"14","hashOfConfig":"10"},{"size":1245,"mtime":1607810103475,"results":"15","hashOfConfig":"16"},{"size":273,"mtime":1607781159651,"results":"17","hashOfConfig":"16"},{"size":4465,"mtime":1607809351405,"results":"18","hashOfConfig":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2vynpr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y1c95n",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/reportWebVitals.js",[],"/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/index.js",[],"/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/App.js",[],"/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/components/ValueView.js",["36"],"/Users/c0rt3x/Documents/BooGeek/React Simple/iOSCalculator/src/components/ButtonContainer.js",["37","38","39"],"/Users/c0rt3x/Documents/BooGeek/React Simple/Calculator/src/App.js",[],"/Users/c0rt3x/Documents/BooGeek/React Simple/Calculator/src/components/ValueView.js",["40"],"/Users/c0rt3x/Documents/BooGeek/React Simple/Calculator/src/components/ButtonContainer.js",["41","42","43","44","45","46"],"import React from \"../../node_modules/react\";\n\nfunction ButtonContainer({\n  inputValue,\n  setInputValue,\n  valueInMemory,\n  setValueInMemomry,\n  operator,\n  setOperator,\n  isPressed,\n  setIsPressed,\n}) {\n  const inputHandler = (e) => {\n    const buttonValue = e.target.textContent;\n    setIsPressed(\"value\");\n    if (\n      inputValue == \"0\" ||\n      isPressed == \"operator\" ||\n      isPressed == \"calculate\"\n    ) {\n      setInputValue(buttonValue);\n    } else {\n      setInputValue((prevValue) => prevValue + buttonValue);\n    }\n    document.querySelector(\".ac\").innerHTML = \"C\";\n  };\n\n  const cleanAll = (e) => {\n    setIsPressed(\"clear\");\n    if (e.target.textContent == \"AC\") {\n      setInputValue(\"0\");\n      setValueInMemomry(\"\");\n      setOperator(\"\");\n    } else {\n      e.target.textContent = \"AC\";\n      setInputValue(\"0\");\n    }\n  };\n\n  const getOperator = (e) => {\n    setIsPressed(\"operator\");\n    setOperator(e.target.textContent);\n    if (inputValue && operator && isPressed !== \"operator\") {\n      setInputValue(calculate());\n      setValueInMemomry(calculate());\n    } else setValueInMemomry(inputValue);\n\n    // calculateOnOpClick();\n  };\n\n  // const calculateOnOpClick = () => {\n  //   if (valueInMemory && isPressed == \"operator\")\n  //     setInputValue(calculate(valueInMemory, operator, inputValue));\n\n  //   if (valueInMemory && operator && isPressed !== \"operator\") {\n  //     setInputValue(calculate(valueInMemory, operator, inputValue));\n  //   }\n  // };\n\n  const getResult = () => {\n    if (\n      valueInMemory &&\n      isPressed !== \"calculate\" &&\n      isPressed !== \"operator\"\n    ) {\n      setIsPressed(\"calculate\");\n      setInputValue(calculate());\n      setValueInMemomry(\"0\");\n      setOperator(\"\");\n    }\n  };\n\n  const decimalKey = () => {\n    setIsPressed(\"decimal\");\n    if (!inputValue.includes(\".\"))\n      setInputValue((prevValue) => prevValue + \".\");\n  };\n\n  const calculate = () => {\n    let result = \"\";\n    if (operator == \"+\") {\n      result = parseFloat(valueInMemory) + parseFloat(inputValue);\n    } else if (operator == \"−\") {\n      result = parseFloat(valueInMemory) - parseFloat(inputValue);\n    } else if (operator === \"×\") {\n      result = parseFloat(valueInMemory) * parseFloat(inputValue);\n    } else if (operator === \"÷\") {\n      result = parseFloat(valueInMemory) / parseFloat(inputValue);\n    }\n    return result;\n  };\n\n  const plusMinusKey = () => {\n    if (!inputValue.includes(\"-\"))\n      setInputValue((prevValue) => \"-\" + prevValue);\n    else setInputValue(inputValue.substring(1));\n  };\n  return (\n    <div className=\"buttons-container\">\n      <button onClick={cleanAll} className=\"button function ac\">\n        AC\n      </button>\n      <button onClick={plusMinusKey} className=\"button function pm\">\n        ±\n      </button>\n      <button onClick={getOperator} className=\"button function percent\">\n        %\n      </button>\n      <button onClick={getOperator} className=\"button operator buttonision\">\n        ÷\n      </button>\n      <button onClick={inputHandler} className=\"button number-7\">\n        7\n      </button>\n      <button onClick={inputHandler} className=\"button number-8\">\n        8\n      </button>\n      <button onClick={inputHandler} className=\"button number-9\">\n        9\n      </button>\n      <button onClick={getOperator} className=\"button operator multiplication\">\n        ×\n      </button>\n      <button onClick={inputHandler} className=\"button number-4\">\n        4\n      </button>\n      <button onClick={inputHandler} className=\"button number-5\">\n        5\n      </button>\n      <button onClick={inputHandler} className=\"button number-6\">\n        6\n      </button>\n      <button onClick={getOperator} className=\"button operator subtraction\">\n        −\n      </button>\n      <button onClick={inputHandler} className=\"button number-1\">\n        1\n      </button>\n      <button onClick={inputHandler} className=\"button number-2\">\n        2\n      </button>\n      <button onClick={inputHandler} className=\"button number-3\">\n        3\n      </button>\n      <button onClick={getOperator} className=\"button operator addition\">\n        +\n      </button>\n      <button onClick={inputHandler} className=\"button number-0\">\n        0\n      </button>\n      <button onClick={decimalKey} className=\"button decimal\">\n        .\n      </button>\n      <button onClick={getResult} className=\"button operator equal\">\n        =\n      </button>\n    </div>\n  );\n}\nexport default ButtonContainer;\n",{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":23},{"ruleId":"51","severity":1,"message":"52","line":13,"column":20,"nodeType":"53","messageId":"54","endLine":13,"endColumn":22},{"ruleId":"51","severity":1,"message":"52","line":14,"column":25,"nodeType":"53","messageId":"54","endLine":14,"endColumn":27},{"ruleId":"55","severity":1,"message":"56","line":32,"column":7,"nodeType":"57","messageId":"58","endLine":56,"endColumn":8},{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":23},{"ruleId":"51","severity":1,"message":"52","line":17,"column":18,"nodeType":"53","messageId":"54","endLine":17,"endColumn":20},{"ruleId":"51","severity":1,"message":"52","line":18,"column":17,"nodeType":"53","messageId":"54","endLine":18,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":19,"column":17,"nodeType":"53","messageId":"54","endLine":19,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":30,"column":30,"nodeType":"53","messageId":"54","endLine":30,"endColumn":32},{"ruleId":"51","severity":1,"message":"52","line":81,"column":18,"nodeType":"53","messageId":"54","endLine":81,"endColumn":20},{"ruleId":"51","severity":1,"message":"52","line":83,"column":25,"nodeType":"53","messageId":"54","endLine":83,"endColumn":27},"no-unused-vars","'ButtonContainer' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]